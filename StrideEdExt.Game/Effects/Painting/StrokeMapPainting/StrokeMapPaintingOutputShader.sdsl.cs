// <auto-generated>
// Do not edit this file yourself!
//
// This code was generated by Stride Shader Mixin Code Generator.
// To generate it yourself, please install Stride.VisualStudio.Package .vsix
// and re-save the associated .sdfx.
// </auto-generated>

using System;
using Stride.Core;
using Stride.Rendering;
using Stride.Graphics;
using Stride.Shaders;
using Stride.Core.Mathematics;
using Buffer = Stride.Graphics.Buffer;

namespace StrideEdExt.Rendering
{
    public static partial class StrokeMapPaintingOutputShaderKeys
    {
        public static readonly ValueParameterKey<int> TextureBrushCount = ParameterKeys.NewValue<int>();
        public static readonly ValueParameterKey<uint> BrushModeType = ParameterKeys.NewValue<uint>();
        public static readonly ValueParameterKey<float> BrushRadius = ParameterKeys.NewValue<float>();
        public static readonly ValueParameterKey<float> BrushOpacity = ParameterKeys.NewValue<float>();
        public static readonly ValueParameterKey<uint> BrushFalloffType = ParameterKeys.NewValue<uint>();
        public static readonly ValueParameterKey<float> FalloffStartPercentage = ParameterKeys.NewValue<float>();
        public static readonly ObjectParameterKey<Buffer> TextureBrushArray = ParameterKeys.NewObject<Buffer>();
        public static readonly ObjectParameterKey<Texture> BrushTexture = ParameterKeys.NewObject<Texture>();
        public static readonly ObjectParameterKey<Texture> PreviousStrokeMapTexture = ParameterKeys.NewObject<Texture>();
    }
}
